version: '3'

services:

  ################
  # postgrest-db #
  ################
  postgrest-db:
    container_name: postgrest-db
    image: postgres:15-alpine
    ports:
      - "4005:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      # anything in initdb directory is created in the database
      # see "How to extend this image" section at https://hub.docker.com/r/_/postgres/
      #- "./initdb:/docker-entrypoint-initdb.d"
      - ./setup/init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./setup:/setup
    networks:
      - postgrest-backend
    restart: always

  ##################
  # pgadmin #
  ##################
  pgadmin:
    container_name: postgrest-pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    ports:
      - "4001:80"
    volumes:
      - ./pgadmin4/servers.json:/pgadmin4/servers.json
    networks:
      - postgrest-backend
    #entrypoint:
      #- "/bin/sh"
      #- "-c"
      #- "/bin/echo 'postgres:4005:*:postgres:postgres' > /docker/compose/dtwin/postgrest-evm/pgadmin4/pgpass && chmod 600 /docker/compose/dtwin/postgrest-evm/pgadmin4/pgpass && /entrypoint.sh"
    depends_on:
      - postgrest-db

  ##############
  # swagger-ui #
  ##############
  swagger-ui:
    container_name: swagger-ui
    image: swaggerapi/swagger-ui:latest
    ports:
      - "4004:8080"
    environment:
      - API_URL=http://db-valera.dtwin.ru:4003
      #- API_URL=https://${DOMAIN}/api
    restart: always


  ##################
  # postgrest-demo #
  ##################
  postgrest-demo:
    container_name: postgrest-demo
    image: nginx:mainline-alpine
    ports:
      - "4002:80"
    volumes:
      # anything in html directory is hosted via nginx
      - "./html:/usr/share/nginx/html"
    restart: always

  #############
  # postgrest #
  #############
  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    ports:
      - "4003:3000"
    # Available environment variables documented here:
    # https://postgrest.org/en/latest/configuration.html#environment-variables
    environment:
      # The standard connection URI format, documented at
      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgrest-db:5432/${POSTGRES_DB}
      # The name of which database schema to expose to REST clients
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      # The database role to use when no client authentication is provided
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
      # Overrides the base URL used within the OpenAPI self-documentation hosted at the API root path
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://db-valera.dtwin.ru:4003
    networks:
      - postgrest-backend
    restart: always
    depends_on:
      - postgrest-db

networks:
  postgrest-backend:
    driver: bridge
